#include "pch.h"

#include "MyItem.h"

#include "MyItem.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing MyItem.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.

//static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::MyApp::implementation
{
    MyItem::MyItem():
        _Title{ L"" }, 
        _Subtitle{ L"" }, 
        _Description{ L"" }
    {
    }

    MyItem::MyItem(hstring const& title, hstring const& subtitle, hstring const& description) :
        _Title{ title },
        _Subtitle{ subtitle },
        _Description{ description }
    {
    }

    hstring MyItem::Title()
    {
        return _Title;
    }

    void MyItem::Title(hstring const& value)
    {
        UpdateValue(L"Title", _Title, value);
    }

    hstring MyItem::Subtitle()
    {
        return _Subtitle;
    }

    void MyItem::Subtitle(hstring const& value)
    {
        UpdateValue(L"Subtitle", _Subtitle, value);
    }

    hstring MyItem::Description()
    {
        return _Description;
    }

    void MyItem::Description(hstring const& value)
    {
        UpdateValue(L"Description", _Description, value);
    }

    winrt::event_token MyItem::PropertyChanged(Microsoft::UI::Xaml::Data::PropertyChangedEventHandler const& value)
    {
        return _PropertyChanged.add(value);
    }

    void MyItem::PropertyChanged(winrt::event_token const& token)
    {
        _PropertyChanged.remove(token);
    }

    void MyItem::RaisePropertyChanged(hstring const& propertyName)
    {
        _PropertyChanged(*this, Microsoft::UI::Xaml::Data::PropertyChangedEventArgs(propertyName));
    }
}
